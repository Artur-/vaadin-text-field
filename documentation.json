{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "vaadin-text-field.html",
        "start": {
          "line": 323,
          "column": 6
        },
        "end": {
          "line": 323,
          "column": 42
        }
      },
      "elements": [
        {
          "description": "`<vaadin-text-field>` is a Polymer element for text field control in forms.\n\n```html\n<vaadin-text-field label=\"First Name\">\n</vaadin-text-field>\n```\n\n### Styling\n\nThe following shadow DOM parts are available for styling:\n\nPart name | Description\n----------------|----------------\n`label` | The label element\n`input` | The input element\n`error-message` | The error message element\n`input-field` | The element that wraps prefix, input and suffix",
          "summary": "",
          "path": "vaadin-text-field.html",
          "attributes": [
            {
              "name": "autofocus",
              "description": "Specify that this control should have input focus when the page loads.",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 44,
                  "column": 8
                },
                "end": {
                  "line": 46,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "focused",
              "description": "If true, the element currently has focus.",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 51,
                  "column": 8
                },
                "end": {
                  "line": 57,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "disabled",
              "description": "If true, the user cannot interact with this element.",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 62,
                  "column": 8
                },
                "end": {
                  "line": 66,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean",
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "autocomplete",
              "description": "Whether the value of the control can be automatically completed by the browser.\nList of available options at:\nhttps://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete",
              "sourceRange": {
                "start": {
                  "line": 125,
                  "column": 12
                },
                "end": {
                  "line": 127,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "error-message",
              "description": "Error to show when the input value is invalid.",
              "sourceRange": {
                "start": {
                  "line": 132,
                  "column": 12
                },
                "end": {
                  "line": 135,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "label",
              "description": "String used for the label element.",
              "sourceRange": {
                "start": {
                  "line": 140,
                  "column": 12
                },
                "end": {
                  "line": 143,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "list",
              "description": "Identifies a list of pre-defined options to suggest to the user.\nThe value must be the id of a <datalist> element in the same document.",
              "sourceRange": {
                "start": {
                  "line": 149,
                  "column": 12
                },
                "end": {
                  "line": 151,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "maxlength",
              "description": "If the value of the type attribute is text, email, search, password, tel, or url,\nspecifies the maximum number of characters (in Unicode code points) that the user\ncan enter.",
              "sourceRange": {
                "start": {
                  "line": 158,
                  "column": 12
                },
                "end": {
                  "line": 160,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number"
            },
            {
              "name": "minlength",
              "description": "If the value of the type attribute is text, email, search, password, tel, or url,\nspecifies the minimum number of characters (in Unicode code points) that the user\ncan enter.",
              "sourceRange": {
                "start": {
                  "line": 167,
                  "column": 12
                },
                "end": {
                  "line": 169,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number"
            },
            {
              "name": "name",
              "description": "The name of the control, which is submitted with the form data.",
              "sourceRange": {
                "start": {
                  "line": 174,
                  "column": 12
                },
                "end": {
                  "line": 176,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "pattern",
              "description": "A regular expression that the value is checked against.\nThe pattern must match the entire value, not just some subset.\nThis attribute applies when the value of the type attribute is text, search, tel,\nurl, email, or password, otherwise it is ignored.",
              "sourceRange": {
                "start": {
                  "line": 184,
                  "column": 12
                },
                "end": {
                  "line": 186,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "placeholder",
              "description": "A hint to the user of what can be entered in the control.",
              "sourceRange": {
                "start": {
                  "line": 191,
                  "column": 12
                },
                "end": {
                  "line": 193,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "readonly",
              "description": "This attribute indicates that the user cannot modify the value of the control.",
              "sourceRange": {
                "start": {
                  "line": 198,
                  "column": 12
                },
                "end": {
                  "line": 200,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "required",
              "description": "Specifies that the user must fill in a value.",
              "sourceRange": {
                "start": {
                  "line": 205,
                  "column": 12
                },
                "end": {
                  "line": 207,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "title",
              "description": "Message to show to the user when validation fails.",
              "sourceRange": {
                "start": {
                  "line": 212,
                  "column": 12
                },
                "end": {
                  "line": 214,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "value",
              "description": "The initial value of the control.\nIt can be used for two-way data binding.",
              "sourceRange": {
                "start": {
                  "line": 220,
                  "column": 12
                },
                "end": {
                  "line": 224,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "invalid",
              "description": "This property is set to true when the control value invalid.",
              "sourceRange": {
                "start": {
                  "line": 229,
                  "column": 12
                },
                "end": {
                  "line": 234,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "has-value",
              "description": "A read-only property indicating whether this input has a non empty value.\nIt can be used for example in styling of the component.",
              "sourceRange": {
                "start": {
                  "line": 240,
                  "column": 12
                },
                "end": {
                  "line": 246,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "prevent-invalid-input",
              "description": "When set to true, user is prevented from typing a value that\nconflicts with the given `pattern`.",
              "sourceRange": {
                "start": {
                  "line": 252,
                  "column": 12
                },
                "end": {
                  "line": 252,
                  "column": 40
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "properties": [
            {
              "name": "autofocus",
              "type": "boolean",
              "description": "Specify that this control should have input focus when the page loads.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 44,
                  "column": 8
                },
                "end": {
                  "line": 46,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "focused",
              "type": "boolean",
              "description": "If true, the element currently has focus.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 51,
                  "column": 8
                },
                "end": {
                  "line": 57,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_focusedChanged\"",
                  "readOnly": true
                }
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "disabled",
              "type": "boolean",
              "description": "If true, the user cannot interact with this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 62,
                  "column": 8
                },
                "end": {
                  "line": 66,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_disabledChanged\""
                }
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_parentForm",
              "type": "Object",
              "description": "The form that the element is registered to.",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-form-element-mixin.html",
                "start": {
                  "line": 25,
                  "column": 8
                },
                "end": {
                  "line": 27,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {}
              },
              "inheritedFrom": "Vaadin.FormElementMixin"
            },
            {
              "name": "autocomplete",
              "type": "string",
              "description": "Whether the value of the control can be automatically completed by the browser.\nList of available options at:\nhttps://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 125,
                  "column": 12
                },
                "end": {
                  "line": 127,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "Error to show when the input value is invalid.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 132,
                  "column": 12
                },
                "end": {
                  "line": 135,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"\""
            },
            {
              "name": "label",
              "type": "string",
              "description": "String used for the label element.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 140,
                  "column": 12
                },
                "end": {
                  "line": 143,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"\""
            },
            {
              "name": "list",
              "type": "string",
              "description": "Identifies a list of pre-defined options to suggest to the user.\nThe value must be the id of a <datalist> element in the same document.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 149,
                  "column": 12
                },
                "end": {
                  "line": 151,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "maxlength",
              "type": "number",
              "description": "If the value of the type attribute is text, email, search, password, tel, or url,\nspecifies the maximum number of characters (in Unicode code points) that the user\ncan enter.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 158,
                  "column": 12
                },
                "end": {
                  "line": 160,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "minlength",
              "type": "number",
              "description": "If the value of the type attribute is text, email, search, password, tel, or url,\nspecifies the minimum number of characters (in Unicode code points) that the user\ncan enter.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 167,
                  "column": 12
                },
                "end": {
                  "line": 169,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "name",
              "type": "string",
              "description": "The name of the control, which is submitted with the form data.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 174,
                  "column": 12
                },
                "end": {
                  "line": 176,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "pattern",
              "type": "string",
              "description": "A regular expression that the value is checked against.\nThe pattern must match the entire value, not just some subset.\nThis attribute applies when the value of the type attribute is text, search, tel,\nurl, email, or password, otherwise it is ignored.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 184,
                  "column": 12
                },
                "end": {
                  "line": 186,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "placeholder",
              "type": "string",
              "description": "A hint to the user of what can be entered in the control.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 191,
                  "column": 12
                },
                "end": {
                  "line": 193,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "readonly",
              "type": "boolean",
              "description": "This attribute indicates that the user cannot modify the value of the control.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 198,
                  "column": 12
                },
                "end": {
                  "line": 200,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "required",
              "type": "boolean",
              "description": "Specifies that the user must fill in a value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 205,
                  "column": 12
                },
                "end": {
                  "line": 207,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "title",
              "type": "string",
              "description": "Message to show to the user when validation fails.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 212,
                  "column": 12
                },
                "end": {
                  "line": 214,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "value",
              "type": "string",
              "description": "The initial value of the control.\nIt can be used for two-way data binding.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 220,
                  "column": 12
                },
                "end": {
                  "line": 224,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_valueChanged\""
                }
              }
            },
            {
              "name": "invalid",
              "type": "boolean",
              "description": "This property is set to true when the control value invalid.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 229,
                  "column": 12
                },
                "end": {
                  "line": 234,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "hasValue",
              "type": "boolean",
              "description": "A read-only property indicating whether this input has a non empty value.\nIt can be used for example in styling of the component.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 240,
                  "column": 12
                },
                "end": {
                  "line": 246,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "preventInvalidInput",
              "type": "boolean",
              "description": "When set to true, user is prevented from typing a value that\nconflicts with the given `pattern`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 252,
                  "column": 12
                },
                "end": {
                  "line": 252,
                  "column": 40
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 297,
                  "column": 8
                },
                "end": {
                  "line": 306,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "vaadin-form-element-mixin.html",
                "start": {
                  "line": 31,
                  "column": 4
                },
                "end": {
                  "line": 34,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.FormElementMixin"
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "vaadin-form-element-mixin.html",
                "start": {
                  "line": 36,
                  "column": 4
                },
                "end": {
                  "line": 43,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.FormElementMixin"
            },
            {
              "name": "_focusedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 110,
                  "column": 4
                },
                "end": {
                  "line": 118,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focused"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_bodyKeydownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 120,
                  "column": 4
                },
                "end": {
                  "line": 122,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_bodyKeyupListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 124,
                  "column": 4
                },
                "end": {
                  "line": 126,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_focus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 137,
                  "column": 4
                },
                "end": {
                  "line": 145,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "blur",
              "description": "Native bluring in the host element does nothing because it does not have the focus.\nIn chrome it works, but not in FF.",
              "privacy": "private",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 152,
                  "column": 4
                },
                "end": {
                  "line": 154,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_disabledChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 156,
                  "column": 4
                },
                "end": {
                  "line": 165,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "disabled"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_tabindexChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "vaadin-control-state-mixin.html",
                "start": {
                  "line": 167,
                  "column": 4
                },
                "end": {
                  "line": 179,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "tabindex"
                }
              ],
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_onInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 260,
                  "column": 8
                },
                "end": {
                  "line": 267,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "name": "_valueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 269,
                  "column": 8
                },
                "end": {
                  "line": 274,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "name": "validate",
              "description": "Returns true if `value` is valid.\n`<iron-form>` uses this to check the validity or all its elements.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 282,
                  "column": 8
                },
                "end": {
                  "line": 284,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_hasError",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 286,
                  "column": 8
                },
                "end": {
                  "line": 288,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "invalid"
                },
                {
                  "name": "errorMessage"
                }
              ]
            },
            {
              "name": "checkValidity",
              "description": "Returns true if the current input value satisfies all constraints (if any)",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 293,
                  "column": 8
                },
                "end": {
                  "line": 295,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "attributeChangedCallback",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 308,
                  "column": 8
                },
                "end": {
                  "line": 315,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "prop"
                },
                {
                  "name": "oldVal"
                },
                {
                  "name": "newVal"
                }
              ]
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "demos": [],
          "slots": [
            {
              "description": "",
              "name": "prefix",
              "range": {
                "file": "vaadin-text-field.html",
                "start": {
                  "line": 54,
                  "column": 8
                },
                "end": {
                  "line": 54,
                  "column": 35
                }
              }
            },
            {
              "description": "",
              "name": "suffix",
              "range": {
                "file": "vaadin-text-field.html",
                "start": {
                  "line": 76,
                  "column": 8
                },
                "end": {
                  "line": 76,
                  "column": 35
                }
              }
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "iron-form-element-register",
              "description": "iron-form-element-register",
              "metadata": {},
              "inheritedFrom": "Vaadin.FormElementMixin"
            },
            {
              "type": "CustomEvent",
              "name": "iron-form-element-unregister",
              "description": "iron-form-element-unregister",
              "metadata": {},
              "inheritedFrom": "Vaadin.FormElementMixin"
            },
            {
              "type": "CustomEvent",
              "name": "value-changed",
              "description": "Fired when the `value` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "invalid-changed",
              "description": "Fired when the `invalid` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "has-value-changed",
              "description": "Fired when the `hasValue` property changes.",
              "metadata": {}
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 316,
              "column": 7
            }
          },
          "privacy": "public",
          "tagname": "vaadin-text-field",
          "classname": "Vaadin.TextFieldElement",
          "mixins": [
            "Vaadin.ControlStateMixin",
            "Vaadin.FormElementMixin",
            "Vaadin.ThemableMixin"
          ],
          "superclass": "HTMLElement"
        }
      ]
    }
  ]
}
